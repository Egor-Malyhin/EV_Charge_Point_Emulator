<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="76b66a1d-1f2c-4dbf-9a80-cc7d32ab3715" name="Changes" comment="Minor code reformat changes" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Enum" />
        <option value="package-info" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenRunner">
    <option name="vmOptions" value="--add-opens java.base/java.lang=ALL-UNNAMED" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2dctEdscHFGSs02YjcYYdfhPyA1" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
    &quot;Application.org.mycorp.main.Main.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ApplicationEventLoggerTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ApplicationEventLoggerTest.testEventLogging.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ChargeTransferBlockTaskTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ChargeTransferBlockTaskTest.getMeterValuesInTimeTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ChargeTransferBlockTaskTest.integratedChargeTransferBlockTaskTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ChargeTransferBlockTaskTest.taskCanceledTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ChargeTransferBlockTaskTest.taskTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ChargeTransferBlockTaskTest.updateMeterValuesTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ChargeTransferBlockTest.getMeterValuesInTimeTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ChargeTransferBlockTest.instantTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ChargeTransferBlockTest.test2.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.ChargeTransferBlockTest.updateMeterValuesTest.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.EVChargeParameterRequestEventListenerTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.EVChargeParameterRequestEventListenerTest.listenEventTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.EVCommunicationBlockHelperTest.acceptSessionClose.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.EVCommunicationBlockHelperTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.EVCommunicationBlockHelperTest.presentChargeParameterTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.EVSessionStopRequestEventListenerTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.EVSessionStopRequestEventListenerTest.listenEventTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.SessionIdCounterTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.SessionIdCounterTest.sessionIdCounterIncrementTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.StationEventLoggerTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.StationEventLoggerTest.testEventLogging.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.V2GDecoderTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.V2GDecoderTest.messageDecodeTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.V2GMessageBuildersTest.buildMessageTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.V2GMessageBuildersTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.V2GMessageHandlerContextTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.V2GMessageHandlerContextTest.getMessageHandlerImplExceptionTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.V2GMessageHandlerContextTest.getMessageHandlerImplTest.executor&quot;: &quot;Debug&quot;,
    &quot;JUnit.XmlConverterTest (1).executor&quot;: &quot;Run&quot;,
    &quot;JUnit.XmlConverterTest.convertV2GToExiTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.XmlConverterTest.convertV2GToXmlTest.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.XmlConverterTest.convertV2GToXmlTestCaseChargeParameterDiscoveryRes.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.XmlConverterTest.convertV2GToXmlTestCaseChargingStatusRes.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.XmlConverterTest.convertV2GToXmlTestCaseException.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.XmlConverterTest.convertV2GToXmlTestCasePowerDeliveryRes.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.XmlConverterTest.convertV2GToXmlTestCaseSessionSetupRes.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.XmlConverterTest.convertV2GToXmlTestCaseSessionStopRes.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.XmlConverterTest.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/MyProjects/EV_Charging_Point&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\MyProjects\EV_Charging_Point\src\main\resources" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\MyProjects\EV_Charging_Point\src\main\resources" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="org.mycorp.models.v2g_messages.req" />
    </key>
  </component>
  <component name="RunManager" selected="Application.Main">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.mycorp.main.Main" />
      <module name="EV_Charging_Point" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.mycorp.main.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StationEventLoggerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="EV_Charging_Point" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="logging.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="logging" />
      <option name="MAIN_CLASS_NAME" value="logging.StationEventLoggerTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StationEventLoggerTest.testEventLogging" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="EV_Charging_Point" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="logging.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="logging" />
      <option name="MAIN_CLASS_NAME" value="logging.StationEventLoggerTest" />
      <option name="METHOD_NAME" value="testEventLogging" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="XmlConverterTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="EV_Charging_Point" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="commev.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="commev" />
      <option name="MAIN_CLASS_NAME" value="commev.XmlConverterTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="XmlConverterTest.convertV2GToXmlTestCaseChargeParameterDiscoveryRes" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="EV_Charging_Point" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="commev.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="commev" />
      <option name="MAIN_CLASS_NAME" value="commev.XmlConverterTest" />
      <option name="METHOD_NAME" value="convertV2GToXmlTestCaseChargeParameterDiscoveryRes" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.Main" />
      <item itemvalue="JUnit.StationEventLoggerTest" />
      <item itemvalue="JUnit.StationEventLoggerTest.testEventLogging" />
      <item itemvalue="JUnit.XmlConverterTest" />
      <item itemvalue="JUnit.XmlConverterTest.convertV2GToXmlTestCaseChargeParameterDiscoveryRes" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Main" />
        <item itemvalue="JUnit.XmlConverterTest" />
        <item itemvalue="JUnit.XmlConverterTest.convertV2GToXmlTestCaseChargeParameterDiscoveryRes" />
        <item itemvalue="JUnit.StationEventLoggerTest" />
        <item itemvalue="JUnit.StationEventLoggerTest.testEventLogging" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="jdk-17.0.10-corretto-17.0.10-4caba194b151-5cd809f4" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="76b66a1d-1f2c-4dbf-9a80-cc7d32ab3715" name="Changes" comment="" />
      <created>1710319085332</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1710319085332</updated>
    </task>
    <task id="LOCAL-00001" summary="&#10;The development of the project carcass has been initiated. The main charging management module was created, along with a module reflecting the physical charging process. Interfaces for all program modules were also developed. Additionally, classes representing V2G messages and specifically response (RES) messages were created. A class was implemented to convert message class objects into XML format first, and then into EXI.">
      <option name="closed" value="true" />
      <created>1711115395648</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1711115395648</updated>
    </task>
    <task id="LOCAL-00002" summary="&#10;The structure of the EV communication block handler was developed, V2G message builders were created, the format of the Station Characteristics class was refactored from singleton to a static class, and new model classes were added to the v2g_messages package, including V2GMessagesClassification, an enum linked to V2G message types. Additionally, an interface for the interaction between the EV communication block and the charging system was developed - EvCommunicationBlockInterface, along with its implementation - EvCommunicationBlockInterfaceImpl. Within this class, V2G messages are assembled using builders and sent via the sendMessage method of the handler to the EVCC.">
      <option name="closed" value="true" />
      <created>1711386530559</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1711386530559</updated>
    </task>
    <task id="LOCAL-00003" summary="Classes of Req messages were added, and an enum characterizing these messages was also completed. The EVCommunicationBlock handler was developed and refactored, and interfaces implementing the interaction between ChargingSystem and EVCommunicationBlock were designed. The logic of ChargingSystem operation, mainly the algorithm, was revised. Thread management logic was added to the InitSystem class. Sending meter values to the server moved to a separate thread. The ability to stop the ChargeTransferBlock and MeterValuesSender threads from outside added.">
      <option name="closed" value="true" />
      <created>1711567603447</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1711567603447</updated>
    </task>
    <task id="LOCAL-00004" summary="Revised the interaction between the blocks: now it is done through messages. Mediators have been added as an intermediate module for communication between blocks. Messages are processed by classes implementing the receiver interface. Depending on the message, they invoke methods of the receiving block's interface.">
      <option name="closed" value="true" />
      <created>1711814603413</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1711814603413</updated>
    </task>
    <task id="LOCAL-00005" summary="The structure of mediators has been redesigned, an additional interface has been developed, MediatorChargeControlSystem, which is inherited from Mediator. MediatorImpl implements both of these interfaces. The MediatorChargeControlSystem indirectly depends on the ChargeControlSystem. The ChargeControlSystem, EVCommunicationBlock, CSMSCommunicationBlock, and ChargeTransferBlock classes have been redesigned to use a mediator. Message sets have also been added, with the help of which the station blocks exchange information with each other.">
      <option name="closed" value="true" />
      <created>1712054545329</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1712054545329</updated>
    </task>
    <task id="LOCAL-00006" summary="Added thread synchronization on the shared resource - StationState. The logic of ChargeTransferBlock has been slightly reworked (updating sampledValues is now considered relative to milliseconds). The logic of V2GSessionIdCounter has been significantly changed - from now on, during creation and incrementation, the counter is always stored as hexBinary. Several tests have been added - testing the ChargeTransferBlock thread, testing the MessageBuilders collector method, testing the V2GSessionIdCounter incrementCounter method.">
      <option name="closed" value="true" />
      <created>1712182984664</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1712182984664</updated>
    </task>
    <task id="LOCAL-00007" summary="Minor cleanup Code Changes.">
      <option name="closed" value="true" />
      <created>1712183113942</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1712183113942</updated>
    </task>
    <task id="LOCAL-00008" summary="The application architecture has been redesigned - the Charge Control System module has been removed. The interaction between the blocks is carried out through ApplicationEventPublisher and EventListener from Spring Events. The new architecture supports expansion in terms of adding new classes of message handlers and event listeners in communication blocks.">
      <option name="closed" value="true" />
      <created>1713522822478</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1713522822478</updated>
    </task>
    <task id="LOCAL-00009" summary="The module chargetransfer has been redesigned for a new architecture. Event listeners and event publishers have been added. Now, the interaction logic based on event-driven architecture is encapsulated within the ChargeTransferBlock class, while the original logic of the class has been moved to ChargeTransferBlockTask. The ChargeTransferBlockInterface interface has been reworked.&#10;&#10;Now, when calling the startCharging() method, the run method of the ChargeTransferBlockTask class will be executed by the executor in a separate thread. After the task completes, one of the implementations of StopChargingEventPublisher will generate an event indicating the end of charging (the event type depends on the shutdown initiator).">
      <option name="closed" value="true" />
      <created>1713958018024</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1713958018024</updated>
    </task>
    <task id="LOCAL-00010" summary="Small code changes made, read-write synchronization added to the stop() method, some event classes added, and development of the State Operator module has been initiated.">
      <option name="closed" value="true" />
      <created>1714385744545</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1714385744545</updated>
    </task>
    <task id="LOCAL-00011" summary="Minor Code Changes">
      <option name="closed" value="true" />
      <created>1714385764495</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1714385764495</updated>
    </task>
    <task id="LOCAL-00012" summary="The stateoperator module has been developed. This module is a service that interacts with SpringStateMachine. This service can change the condition of the machine. The enum constants from the library eu.chargetime OCA-OCPP - ChargePointStatus are used as the states used in the machine, as well as personifying the state of the station. The enum constants of StationStateAction are used as state transitions. StateMachineListener has also been added, which publishes the stateChanged event when the station status changes. The redesign for the new architecture of the commcsms module has also begun">
      <option name="closed" value="true" />
      <created>1714484819910</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1714484819910</updated>
    </task>
    <task id="LOCAL-00013" summary="The commcsms module has been redesigned for a new architecture, using the eu.chargetime Java OCA-OCPP library. New events were added, the chargetransfer module was also slightly redesigned - now, at the end, it generates only the ChargingStopped event, and the initiator of the stop is recorded in a separate shutdownInitiator field. Logging has also been added - after each event, its name and sender are recorded in the console. Logging logic in the logging module, Spring AOP was used in the implementation">
      <option name="closed" value="true" />
      <created>1714594604172</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1714594604172</updated>
    </task>
    <task id="LOCAL-00014" summary="Minor code cleanup">
      <option name="closed" value="true" />
      <created>1714594728802</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1714594728802</updated>
    </task>
    <task id="LOCAL-00015" summary="&#10;Events have been reworked - now each module has its own abstract class inheriting from ApplicationEvent. The source in them is specified as the Class of the module's main class, for example - SomeAdditionalBlock.class. Additionally, there are common events in the common package, they inherit directly from ApplicationEvent. When using them in the program, the source should specify the Class of the module's main class. Also, the CSMS Communication Helper module has been developed. This module reacts to connections to CSMS and, after the start of charging, publishes a meterValues request to CSMS on a timer in a separate thread.">
      <option name="closed" value="true" />
      <created>1714661349965</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1714661349965</updated>
    </task>
    <task id="LOCAL-00016" summary="Old event classes have been restored. Now, each class publishing an event should specify its own object as the source field. This change was made to simplify event handling and enable more convenient logging. Additionally, the ChargeTransferBlockTaskTest class has been enhanced. This class includes the following methods: taskTest(), which demonstrates the execution of the electric vehicle charging process; integratedTaskTest(), which verifies how locking works and whether threads are mutually blocked; taskCanceledTest(), which concludes the task execution via the stop(String shutdownInitiator) method and also outputs information about the number of seconds from the start of the stop() method until the task is stopped. Furthermore, many classes have been refactored using Lombok, with the addition of annotations such as @Getter, @Setter, and @Slf4j.">
      <option name="closed" value="true" />
      <created>1714772046555</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1714772046555</updated>
    </task>
    <task id="LOCAL-00017" summary="Minor code reformat changes">
      <option name="closed" value="true" />
      <created>1714772104793</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1714772104793</updated>
    </task>
    <task id="LOCAL-00018" summary="Minor tests reformat changes">
      <option name="closed" value="true" />
      <created>1714772162654</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1714772162654</updated>
    </task>
    <task id="LOCAL-00019" summary="Added a new abstract class for all application events - StationEvent. This class serves as a wrapper over the ApplicationEvent class. This class is needed for logging - to intercept only those events that are defined in the application. Existing parameterized interfaces and abstract classes have been refactored to use this class as their base.">
      <option name="closed" value="true" />
      <created>1714774331524</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1714774331524</updated>
    </task>
    <task id="LOCAL-00020" summary="&#10;Changes have been made to V2G message objects, and the V2GEncoder has also been debugged (it now writes byte arrays to the buffer). An additional session ID check has been added in EVCommunicationBlockSessionHandler when receiving a message from EV. A factory for V2G Response messages has been created, and event listeners in the comm ev module no longer depend on builder classes. Synchronization has been added to StationVariables - all fields are now represented as atomics, and initialization is lazy. A minor code refactoring in ChargeTransferBlockTask - a private synchronized method start() has been added, which is called when starting ChargeTransferBlockTask.">
      <option name="closed" value="true" />
      <created>1714854561218</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1714854561218</updated>
    </task>
    <task id="LOCAL-00021" summary="Minor code formatting changes">
      <option name="closed" value="true" />
      <created>1714854688605</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1714854688605</updated>
    </task>
    <task id="LOCAL-00022" summary="&#10;Classes EVMessageLogger and ExceptionLogger have been added as loggers. WebSocketActionListener class has been added, which sends events after the session starts and tries to reconnect three times every 2 seconds after disconnection. Module evreqlocalmanager has been renamed to commevhelper, and the logic has been refactored (now event listeners are in a separate package and do not inherit from evlocalreqmanager). Tests for converting objects to XML have been added, as well as unit tests for the EVCommunicationBlockHelper class and its event listeners.">
      <option name="closed" value="true" />
      <created>1715031173416</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1715031173416</updated>
    </task>
    <task id="LOCAL-00023" summary="Minor code reformat changes">
      <option name="closed" value="true" />
      <created>1715031223956</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1715031223956</updated>
    </task>
    <task id="LOCAL-00024" summary="Minor code reformat changes using Lombok">
      <option name="closed" value="true" />
      <created>1715031524668</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1715031524668</updated>
    </task>
    <task id="LOCAL-00025" summary="During the handling of the premature emergency disconnection case, the architecture was expanded. A new state, Unavailable, was added, which is used when the electric vehicle (EV) disconnects, but other EVs cannot yet connect to the station. This state can be entered using the GET_UNAVAILABLE action and can be transitioned into from any other state. Transitioning to the Available state is now only possible from the Unavailable state.&#10;&#10;The API of the commev module was extended, and now the EVCommunicationBlockInterface provides new methods - availableConnection() and acceptDisconnect(). Now, each time before sending a SessionStopRes message, the acceptDisconnect method needs to be called, and to allow EVs to reconnect to the charging station, the availableConnection() method needs to be invoked. For control over the Unavailable and Available states, a new module, ConnectorManager, was created. It provides methods unlockConnector() and requestStopChargingEmergency().&#10;&#10;The StateOperator, after the EV disconnection, defaults to changing the state to UNAVAILABLE, and ConnectorManager is responsible for unlocking. In all cases except one, when handling the DisconnectedEV event, this module's listener invokes the unlockConnector method, but if disconnect permission was not granted and the charging transfer process is not currently stopped, this class calls the requestStopChargingEmergency() method. In this method, the StopChargingEmergency event is published, and during its handling, ChargeTransferBlock must urgently complete the task execution and then publish the ChargingStoppedEmergency event. When listening to this event, the ConnectorManager class unlocks the connector (after the charging process is completely stopped). Additionally, a parent ChargingStopped event was added for the ChargingStoppedNormally and ChargingStoppedEmergency event classes, so that different modules could subscribe to the charging stoppage, regardless of how it ended.">
      <option name="closed" value="true" />
      <created>1715111182598</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1715111182598</updated>
    </task>
    <task id="LOCAL-00026" summary="Minor code reformat">
      <option name="closed" value="true" />
      <created>1715111227161</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1715111227161</updated>
    </task>
    <task id="LOCAL-00027" summary="Minor code reformat">
      <option name="closed" value="true" />
      <created>1715111229479</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1715111229479</updated>
    </task>
    <task id="LOCAL-00028" summary="Classes MeterValues and Charge have been modified. Now Charge objects are mutable, and MeterValues now contains fields Instant timestamp and Charge charge. Minor changes have been made to other classes accordingly.">
      <option name="closed" value="true" />
      <created>1715114942588</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1715114942588</updated>
    </task>
    <task id="LOCAL-00029" summary="Added a new abstract class StationEventPublisher. Now all classes that publish events depend on StationEventPublisher. The connection address to the CSMS and the hostname for the EVCommunicationBlock have been moved to the application file.">
      <option name="closed" value="true" />
      <created>1715185942298</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1715185942298</updated>
    </task>
    <task id="LOCAL-00030" summary="Minor code reformat">
      <option name="closed" value="true" />
      <created>1715185993938</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1715185993938</updated>
    </task>
    <task id="LOCAL-00031" summary="Changes to the code after moving the V2G message classes into a separate module.">
      <option name="closed" value="true" />
      <created>1715192358674</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1715192358674</updated>
    </task>
    <task id="LOCAL-00032" summary="Minor code reformat changes">
      <option name="closed" value="true" />
      <created>1715192442241</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1715192442241</updated>
    </task>
    <option name="localTasksCounter" value="33" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Revised the interaction between the blocks: now it is done through messages. Mediators have been added as an intermediate module for communication between blocks. Messages are processed by classes implementing the receiver interface. Depending on the message, they invoke methods of the receiving block's interface." />
    <MESSAGE value="The structure of mediators has been redesigned, an additional interface has been developed, MediatorChargeControlSystem, which is inherited from Mediator. MediatorImpl implements both of these interfaces. The MediatorChargeControlSystem indirectly depends on the ChargeControlSystem. The ChargeControlSystem, EVCommunicationBlock, CSMSCommunicationBlock, and ChargeTransferBlock classes have been redesigned to use a mediator. Message sets have also been added, with the help of which the station blocks exchange information with each other." />
    <MESSAGE value="Added thread synchronization on the shared resource - StationState. The logic of ChargeTransferBlock has been slightly reworked (updating sampledValues is now considered relative to milliseconds). The logic of V2GSessionIdCounter has been significantly changed - from now on, during creation and incrementation, the counter is always stored as hexBinary. Several tests have been added - testing the ChargeTransferBlock thread, testing the MessageBuilders collector method, testing the V2GSessionIdCounter incrementCounter method." />
    <MESSAGE value="Minor cleanup Code Changes." />
    <MESSAGE value="The application architecture has been redesigned - the Charge Control System module has been removed. The interaction between the blocks is carried out through ApplicationEventPublisher and EventListener from Spring Events. The new architecture supports expansion in terms of adding new classes of message handlers and event listeners in communication blocks." />
    <MESSAGE value="The module chargetransfer has been redesigned for a new architecture. Event listeners and event publishers have been added. Now, the interaction logic based on event-driven architecture is encapsulated within the ChargeTransferBlock class, while the original logic of the class has been moved to ChargeTransferBlockTask. The ChargeTransferBlockInterface interface has been reworked.&#10;&#10;Now, when calling the startCharging() method, the run method of the ChargeTransferBlockTask class will be executed by the executor in a separate thread. After the task completes, one of the implementations of StopChargingEventPublisher will generate an event indicating the end of charging (the event type depends on the shutdown initiator)." />
    <MESSAGE value="Small code changes made, read-write synchronization added to the stop() method, some event classes added, and development of the State Operator module has been initiated." />
    <MESSAGE value="Minor Code Changes" />
    <MESSAGE value="The stateoperator module has been developed. This module is a service that interacts with SpringStateMachine. This service can change the condition of the machine. The enum constants from the library eu.chargetime OCA-OCPP - ChargePointStatus are used as the states used in the machine, as well as personifying the state of the station. The enum constants of StationStateAction are used as state transitions. StateMachineListener has also been added, which publishes the stateChanged event when the station status changes. The redesign for the new architecture of the commcsms module has also begun" />
    <MESSAGE value="The commcsms module has been redesigned for a new architecture, using the eu.chargetime Java OCA-OCPP library. New events were added, the chargetransfer module was also slightly redesigned - now, at the end, it generates only the ChargingStopped event, and the initiator of the stop is recorded in a separate shutdownInitiator field. Logging has also been added - after each event, its name and sender are recorded in the console. Logging logic in the logging module, Spring AOP was used in the implementation" />
    <MESSAGE value="Minor code cleanup" />
    <MESSAGE value="&#10;Events have been reworked - now each module has its own abstract class inheriting from ApplicationEvent. The source in them is specified as the Class of the module's main class, for example - SomeAdditionalBlock.class. Additionally, there are common events in the common package, they inherit directly from ApplicationEvent. When using them in the program, the source should specify the Class of the module's main class. Also, the CSMS Communication Helper module has been developed. This module reacts to connections to CSMS and, after the start of charging, publishes a meterValues request to CSMS on a timer in a separate thread." />
    <MESSAGE value="Old event classes have been restored. Now, each class publishing an event should specify its own object as the source field. This change was made to simplify event handling and enable more convenient logging. Additionally, the ChargeTransferBlockTaskTest class has been enhanced. This class includes the following methods: taskTest(), which demonstrates the execution of the electric vehicle charging process; integratedTaskTest(), which verifies how locking works and whether threads are mutually blocked; taskCanceledTest(), which concludes the task execution via the stop(String shutdownInitiator) method and also outputs information about the number of seconds from the start of the stop() method until the task is stopped. Furthermore, many classes have been refactored using Lombok, with the addition of annotations such as @Getter, @Setter, and @Slf4j." />
    <MESSAGE value="Minor tests reformat changes" />
    <MESSAGE value="Added a new abstract class for all application events - StationEvent. This class serves as a wrapper over the ApplicationEvent class. This class is needed for logging - to intercept only those events that are defined in the application. Existing parameterized interfaces and abstract classes have been refactored to use this class as their base." />
    <MESSAGE value="&#10;Changes have been made to V2G message objects, and the V2GEncoder has also been debugged (it now writes byte arrays to the buffer). An additional session ID check has been added in EVCommunicationBlockSessionHandler when receiving a message from EV. A factory for V2G Response messages has been created, and event listeners in the comm ev module no longer depend on builder classes. Synchronization has been added to StationVariables - all fields are now represented as atomics, and initialization is lazy. A minor code refactoring in ChargeTransferBlockTask - a private synchronized method start() has been added, which is called when starting ChargeTransferBlockTask." />
    <MESSAGE value="Minor code formatting changes" />
    <MESSAGE value="&#10;Classes EVMessageLogger and ExceptionLogger have been added as loggers. WebSocketActionListener class has been added, which sends events after the session starts and tries to reconnect three times every 2 seconds after disconnection. Module evreqlocalmanager has been renamed to commevhelper, and the logic has been refactored (now event listeners are in a separate package and do not inherit from evlocalreqmanager). Tests for converting objects to XML have been added, as well as unit tests for the EVCommunicationBlockHelper class and its event listeners." />
    <MESSAGE value="Minor code reformat changes using Lombok" />
    <MESSAGE value="During the handling of the premature emergency disconnection case, the architecture was expanded. A new state, Unavailable, was added, which is used when the electric vehicle (EV) disconnects, but other EVs cannot yet connect to the station. This state can be entered using the GET_UNAVAILABLE action and can be transitioned into from any other state. Transitioning to the Available state is now only possible from the Unavailable state.&#10;&#10;The API of the commev module was extended, and now the EVCommunicationBlockInterface provides new methods - availableConnection() and acceptDisconnect(). Now, each time before sending a SessionStopRes message, the acceptDisconnect method needs to be called, and to allow EVs to reconnect to the charging station, the availableConnection() method needs to be invoked. For control over the Unavailable and Available states, a new module, ConnectorManager, was created. It provides methods unlockConnector() and requestStopChargingEmergency().&#10;&#10;The StateOperator, after the EV disconnection, defaults to changing the state to UNAVAILABLE, and ConnectorManager is responsible for unlocking. In all cases except one, when handling the DisconnectedEV event, this module's listener invokes the unlockConnector method, but if disconnect permission was not granted and the charging transfer process is not currently stopped, this class calls the requestStopChargingEmergency() method. In this method, the StopChargingEmergency event is published, and during its handling, ChargeTransferBlock must urgently complete the task execution and then publish the ChargingStoppedEmergency event. When listening to this event, the ConnectorManager class unlocks the connector (after the charging process is completely stopped). Additionally, a parent ChargingStopped event was added for the ChargingStoppedNormally and ChargingStoppedEmergency event classes, so that different modules could subscribe to the charging stoppage, regardless of how it ended." />
    <MESSAGE value="Classes MeterValues and Charge have been modified. Now Charge objects are mutable, and MeterValues now contains fields Instant timestamp and Charge charge. Minor changes have been made to other classes accordingly." />
    <MESSAGE value="Added a new abstract class StationEventPublisher. Now all classes that publish events depend on StationEventPublisher. The connection address to the CSMS and the hostname for the EVCommunicationBlock have been moved to the application file." />
    <MESSAGE value="Minor code reformat" />
    <MESSAGE value="Changes to the code after moving the V2G message classes into a separate module." />
    <MESSAGE value="Minor code reformat changes" />
    <option name="LAST_COMMIT_MESSAGE" value="Minor code reformat changes" />
  </component>
</project>